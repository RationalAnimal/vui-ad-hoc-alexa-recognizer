{
  "description": "Simple pizza ordering domain",
  "recognizers": [
    {
      "key": "pizza",
      "path": "./test/pizzadomain/pizzarecognizer.json"
    }
  ],
  "domains": [
    {
      "key": "greeting",
      "path": "./test/greetingdomain/greetingdomain.json",
      "domain": {}
    }
  ],
  "states": [
    {
      "matchCriteria": "default",
      "matchSpecs": [
        {
          "recognizer": "pizza",
          "responders": [
            {
              "result": {
                "combineRule": "setTo",
                "directValues": {
                  "pickMethod": "randomDoNotRepeat",
                  "repeatSelector": "squirrelledAwayAlreadyUsed",
                  "values": [
                    {"text": "Thanks a bunch", "ssml": "<speak>Thanks a bunch</speak>", "videos": ["http://someurl.com"]},
                    {"text": "Danke", "ssml": "<speak>Danke</speak>"},
                    {"text": "I agree", "ssml": "<speak>I agree</speak>", "card": {"Title": "First Card Title"}}
                  ]
                }
              }
            },
            {
              "result": {
                "combineRule": "mergeAppend",
                "directValues": {
                  "pickMethod": "randomDoNotRepeat",
                  "repeatSelector": "squirrelledAwayAlreadyUsed2",
                  "values": [
                    {"text": "Second responder thanks you", "ssml": "<speak>Thanks a bunch</speak>", "videos": ["http://someotherurl.com"]},
                    {"text": "Second responder thanks you again", "ssml": "<speak>Thanks a bunch with a card</speak>", "videos": ["http://somethirdurl.com"], "card": {"Title": "Card Title"}}
                  ]
                }
              }
            },
            {
              "result": {
                "combineRule": "ignore",
                "directValue": {"text": "Ignore this text"}
              },
              "updateState": {
                "updateRule": "setTo",
                "directValue": {"description": "result of setTo updateRule"}
              }
            },
            {
              "result": {
                "combineRule": "ignore",
                "directValue": {"text": "Ignore this text"}
              },
              "updateState": {
                "updateRule": "mergeReplace",
                "updateSelector": "someuselessvalue.some.other.useless.value",
                "directValue": {"update": "result of replaceMerge updateRule"}
              }
            }
          ]
        },
        {
          "domain": "greeting"
        }
      ]
    }
  ]
}